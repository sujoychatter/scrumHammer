{"version":3,"sources":["vendor/ember-cli/app-prefix.js","frontend/adapters/application.js","frontend/app.js","frontend/components/app-version.js","frontend/controllers/array.js","frontend/controllers/object.js","frontend/initializers/app-version.js","frontend/initializers/export-application-global.js","frontend/router.js","frontend/templates/application.js","frontend/tests/adapters/application.jshint.js","frontend/tests/app.jshint.js","frontend/tests/helpers/resolver.js","frontend/tests/helpers/resolver.jshint.js","frontend/tests/helpers/start-app.js","frontend/tests/helpers/start-app.jshint.js","frontend/tests/router.jshint.js","frontend/tests/test-helper.js","frontend/tests/test-helper.jshint.js","frontend/tests/transforms/array.jshint.js","frontend/tests/transforms/localdate.jshint.js","frontend/tests/transforms/raw.jshint.js","frontend/tests/utils/debounce.jshint.js","frontend/tests/utils/promise-ajax.jshint.js","frontend/tests/utils/throttle.jshint.js","frontend/transforms/array.js","frontend/transforms/localdate.js","frontend/transforms/raw.js","frontend/utils/debounce.js","frontend/utils/promise-ajax.js","frontend/utils/throttle.js","vendor/ember-cli/app-suffix.js","vendor/ember-cli/app-boot.js"],"sourcesContent":["\"use strict\";\n/* jshint ignore:start */\n\n/* jshint ignore:end */\n","define('frontend/adapters/application', ['exports', 'ember-data', 'ember', 'frontend/config/environment'], function (exports, DS, Ember, AppENV) {\n\n\t'use strict';\n\n\texports['default'] = DS['default'].RESTAdapter.extend({\n\t\tnamespace: AppENV['default'].APP.apihost,\n\t\tcoalesceFindRequests: true,\n\t\tfindQuery: function findQuery(store, type, query) {\n\t\t\t/*\n\t  \tExtension for findQuery where you can append a string to API Url to hit.\n\t  \tFor example\n\t  \t\t1. store.find(\"user\",{appendUrl:\"me\"}) => {host}/users/me\n\t  \t\t2. store.find(\"user\",{appendUrl:\"me\",email:\"abc@gmail.com\"}) => {host}/users/me?email=abc@gmail.com\n\t  */\n\n\t\t\tvar url = \"\",\n\t\t\t    query = Ember['default'].copy(query);\n\t\t\t//make a copy of query object so that changes here do not reflect on objects passed\n\n\t\t\tif (query && query.appendUrl) {\n\t\t\t\turl = this.buildURL(type.typeKey) + \"/\" + query.appendUrl;\n\t\t\t\tdelete query.appendUrl;\n\t\t\t}\n\t\t\tif (query && query.prependUrl) {\n\t\t\t\turl = this.buildURL() + \"/\" + query.prependUrl + \"/\" + Ember['default'].String.pluralize(type.typeKey);\n\t\t\t\tdelete query.prependUrl;\n\t\t\t}\n\t\t\tif (url === \"\") {\n\t\t\t\turl = this.buildURL(type.typeKey);\n\t\t\t}\n\t\t\treturn this.ajax(url, 'GET', { data: query });\n\t\t}\n\t});\n\n});","define('frontend/app', ['exports', 'ember', 'ember/resolver', 'ember/load-initializers', 'frontend/config/environment'], function (exports, Ember, Resolver, loadInitializers, config) {\n\n  'use strict';\n\n  var App;\n\n  Ember['default'].MODEL_FACTORY_INJECTIONS = true;\n\n  App = Ember['default'].Application.extend({\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix,\n    Resolver: Resolver['default']\n  });\n\n  loadInitializers['default'](App, config['default'].modulePrefix);\n\n  exports['default'] = App;\n\n});","define('frontend/components/app-version', ['exports', 'ember-cli-app-version/components/app-version', 'frontend/config/environment'], function (exports, AppVersionComponent, config) {\n\n  'use strict';\n\n  var _config$APP = config['default'].APP;\n  var name = _config$APP.name;\n  var version = _config$APP.version;\n\n  exports['default'] = AppVersionComponent['default'].extend({\n    version: version,\n    name: name\n  });\n\n});","define('frontend/controllers/array', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Controller;\n\n});","define('frontend/controllers/object', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Controller;\n\n});","define('frontend/initializers/app-version', ['exports', 'ember-cli-app-version/initializer-factory', 'frontend/config/environment'], function (exports, initializerFactory, config) {\n\n  'use strict';\n\n  var _config$APP = config['default'].APP;\n  var name = _config$APP.name;\n  var version = _config$APP.version;\n\n  exports['default'] = {\n    name: 'App Version',\n    initialize: initializerFactory['default'](name, version)\n  };\n\n});","define('frontend/initializers/export-application-global', ['exports', 'ember', 'frontend/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  exports.initialize = initialize;\n\n  function initialize() {\n    var application = arguments[1] || arguments[0];\n    if (config['default'].exportApplicationGlobal !== false) {\n      var value = config['default'].exportApplicationGlobal;\n      var globalName;\n\n      if (typeof value === 'string') {\n        globalName = value;\n      } else {\n        globalName = Ember['default'].String.classify(config['default'].modulePrefix);\n      }\n\n      if (!window[globalName]) {\n        window[globalName] = application;\n\n        application.reopen({\n          willDestroy: function willDestroy() {\n            this._super.apply(this, arguments);\n            delete window[globalName];\n          }\n        });\n      }\n    }\n  }\n\n  exports['default'] = {\n    name: 'export-application-global',\n\n    initialize: initialize\n  };\n\n});","define('frontend/router', ['exports', 'ember', 'frontend/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  var Router = Ember['default'].Router.extend({\n    location: config['default'].locationType\n  });\n\n  Router.map(function () {});\n\n  exports['default'] = Router;\n\n});","define('frontend/templates/application', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      meta: {\n        \"topLevel\": false,\n        \"revision\": \"Ember@2.1.0\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 4,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"frontend/templates/application.hbs\"\n      },\n      isEmpty: false,\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"top-nav-bar\");\n        dom.setAttribute(el1,\"id\",\"header-bar\");\n        var el2 = dom.createTextNode(\" SCRUM HAMMER\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var morphs = new Array(1);\n        morphs[0] = dom.createMorphAt(fragment,2,2,contextualElement);\n        return morphs;\n      },\n      statements: [\n        [\"content\",\"outlet\",[\"loc\",[null,[3,0],[3,10]]]]\n      ],\n      locals: [],\n      templates: []\n    };\n  }()));\n\n});","define('frontend/tests/adapters/application.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - adapters');\n  QUnit.test('adapters/application.js should pass jshint', function(assert) { \n    assert.ok(false, 'adapters/application.js should pass jshint.\\nadapters/application.js: line 17, col 19, \\'query\\' is already defined.\\n\\n1 error'); \n  });\n\n});","define('frontend/tests/app.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - .');\n  QUnit.test('app.js should pass jshint', function(assert) { \n    assert.ok(true, 'app.js should pass jshint.'); \n  });\n\n});","define('frontend/tests/helpers/resolver', ['exports', 'ember/resolver', 'frontend/config/environment'], function (exports, Resolver, config) {\n\n  'use strict';\n\n  var resolver = Resolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n\n});","define('frontend/tests/helpers/resolver.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - helpers');\n  QUnit.test('helpers/resolver.js should pass jshint', function(assert) { \n    assert.ok(true, 'helpers/resolver.js should pass jshint.'); \n  });\n\n});","define('frontend/tests/helpers/start-app', ['exports', 'ember', 'frontend/app', 'frontend/config/environment'], function (exports, Ember, Application, config) {\n\n  'use strict';\n\n\n\n  exports['default'] = startApp;\n  function startApp(attrs) {\n    var application;\n\n    var attributes = Ember['default'].merge({}, config['default'].APP);\n    attributes = Ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    Ember['default'].run(function () {\n      application = Application['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n\n});","define('frontend/tests/helpers/start-app.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - helpers');\n  QUnit.test('helpers/start-app.js should pass jshint', function(assert) { \n    assert.ok(true, 'helpers/start-app.js should pass jshint.'); \n  });\n\n});","define('frontend/tests/router.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - .');\n  QUnit.test('router.js should pass jshint', function(assert) { \n    assert.ok(true, 'router.js should pass jshint.'); \n  });\n\n});","define('frontend/tests/test-helper', ['frontend/tests/helpers/resolver', 'ember-qunit'], function (resolver, ember_qunit) {\n\n\t'use strict';\n\n\tember_qunit.setResolver(resolver['default']);\n\n});","define('frontend/tests/test-helper.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - .');\n  QUnit.test('test-helper.js should pass jshint', function(assert) { \n    assert.ok(true, 'test-helper.js should pass jshint.'); \n  });\n\n});","define('frontend/tests/transforms/array.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - transforms');\n  QUnit.test('transforms/array.js should pass jshint', function(assert) { \n    assert.ok(true, 'transforms/array.js should pass jshint.'); \n  });\n\n});","define('frontend/tests/transforms/localdate.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - transforms');\n  QUnit.test('transforms/localdate.js should pass jshint', function(assert) { \n    assert.ok(false, 'transforms/localdate.js should pass jshint.\\ntransforms/localdate.js: line 5, col 12, \\'moment\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('frontend/tests/transforms/raw.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - transforms');\n  QUnit.test('transforms/raw.js should pass jshint', function(assert) { \n    assert.ok(true, 'transforms/raw.js should pass jshint.'); \n  });\n\n});","define('frontend/tests/utils/debounce.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - utils');\n  QUnit.test('utils/debounce.js should pass jshint', function(assert) { \n    assert.ok(false, 'utils/debounce.js should pass jshint.\\nutils/debounce.js: line 23, col 2, Unnecessary semicolon.\\n\\n1 error'); \n  });\n\n});","define('frontend/tests/utils/promise-ajax.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - utils');\n  QUnit.test('utils/promise-ajax.js should pass jshint', function(assert) { \n    assert.ok(false, 'utils/promise-ajax.js should pass jshint.\\nutils/promise-ajax.js: line 8, col 13, Expected \\'{\\' and instead saw \\'return\\'.\\nutils/promise-ajax.js: line 6, col 36, \\'$\\' is not defined.\\n\\n2 errors'); \n  });\n\n});","define('frontend/tests/utils/throttle.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - utils');\n  QUnit.test('utils/throttle.js should pass jshint', function(assert) { \n    assert.ok(false, 'utils/throttle.js should pass jshint.\\nutils/throttle.js: line 23, col 2, Unnecessary semicolon.\\n\\n1 error'); \n  });\n\n});","define('frontend/transforms/array', ['exports', 'ember', 'ember-data'], function (exports, Em, DS) {\n\n  'use strict';\n\n  exports['default'] = DS['default'].Transform.extend({\n    deserialize: function deserialize(serialized) {\n      return new Em['default'].A(serialized);\n    },\n    serialize: function serialize(deserialized) {\n      return deserialized.toArray();\n    }\n  });\n\n});","define('frontend/transforms/localdate', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  exports['default'] = DS['default'].Transform.extend({\n    deserialize: function deserialize(value) {\n      return moment.utc(value).local();\n    },\n    serialize: function serialize(value) {\n      return value ? value.utc.toJSON() : null;\n    }\n  });\n\n});","define('frontend/transforms/raw', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  exports['default'] = DS['default'].Transform.extend({\n    deserialize: function deserialize(serialized) {\n      return serialized;\n    },\n    serialize: function serialize(deserialized) {\n      return deserialized;\n    }\n  });\n\n});","define('frontend/utils/debounce', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n\n  exports['default'] = debounce;function debounce(func, wait) {\n    var self, args;\n    var later = function later() {\n      func.apply(self, args);\n    };\n\n    return function () {\n      self = this;\n      args = arguments;\n      Ember['default'].run.debounce(null, later, wait);\n    };\n  }\n\n  ;\n\n});","define('frontend/utils/promise-ajax', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\t/**\n\t\tCast $.ajax into a Proper Promise object using RSVP's cast method.\n\t**/\n\texports['default'] = function (options) {\n\t\treturn Ember['default'].RSVP.Promise.cast($.ajax(options)).then(function (data) {\n\t\t\tif (data.error) return new Ember['default'].RSVP.reject({ message: data.error });\n\t\t\treturn data;\n\t\t});\n\t}\n\n});","define('frontend/utils/throttle', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n\n  exports['default'] = throttle;function throttle(func, wait) {\n    var self, args;\n    var later = function later() {\n      func.apply(self, args);\n    };\n\n    return function () {\n      self = this;\n      args = arguments;\n      Ember['default'].run.throttle(null, later, wait, 0, false);\n    };\n  }\n\n  ;\n\n});","/* jshint ignore:start */\n\n/* jshint ignore:end */\n","/* jshint ignore:start */\n\ndefine('frontend/config/environment', ['ember'], function(Ember) {\n  var prefix = 'frontend';\n/* jshint ignore:start */\n\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = Ember['default'].$('meta[name=\"' + metaName + '\"]').attr('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  return { 'default': config };\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n/* jshint ignore:end */\n\n});\n\nif (runningTests) {\n  require(\"frontend/tests/test-helper\");\n} else {\n  require(\"frontend/app\")[\"default\"].create({\"apihost\":\"api/v1\",\"name\":\"frontend\",\"version\":\"0.0.0+8a1d9960\"});\n}\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;","file":"frontend.js"}